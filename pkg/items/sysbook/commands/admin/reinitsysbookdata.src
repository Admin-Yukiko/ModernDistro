use uo;
use os;
use util;
use cfgfile;
use datafile;

include ":sysbook:spawnShelf";
include ":sysbook:sysBook";
include ":gumps:yesNoSizable";

program shelfstock(who);

	// The extra spaces in the second string are to make the question the last line of text in the gump.
	var prompt :=	"This command wipes the sysbook data file and reinitializes it " +
					"using the books config file. This command would typically be used " +
					"after you have added books to the system with addsysbook. Do you wish to continue?";
	var do_it := YesNoSizable(who, prompt);
	if(!do_it)
		return 0;
	endif
	var cur_page,cur_line,pages,entry,title,author,counter;
	var bookstr := array{};
	var books := ReadConfigFile("books");
	if(!books)
		LogToFile("::log/sysbook.log", "[reinitsysbookdata.ecl]: Error loading config file: " + books.errortext, LOG_DATETIME);
		print("Sysbook error - check sysbook.log");
		return 0;
	endif
	var thebooks := GetConfigStringKeys(books);
	var book_data := CreateDataFile("staticbooks", DF_KEYTYPE_INTEGER);
	if(!book_data)
		LogToFile("::log/sysbook.log", "[reinitsysbookdata.ecl]: Datastore file error: " + book_data.errortext, LOG_DATETIME);
		print("Sysbook error - check sysbook.log");
		return 0;
	endif
	var book_keys := book_data.Keys();
	foreach key in book_keys
		book_data.DeleteElement(key);
		Sleepms(5);
	endforeach

	foreach bookitem in thebooks
		bookitem := CInt(bookitem);
		if(!BookExists(book_data,bookitem))
			counter := 1;
			pages := CInt(books[bookitem].pages);
			title := (books[bookitem].title);
			author := (books[bookitem].author);
			for(cur_page := 1; cur_page <= pages; cur_page := cur_page + 1)
				for(cur_line := 1; cur_line <= 8; cur_line := cur_line + 1)
					entry := GetConfigString(books[bookitem], "p" + cur_page + "l" + cur_line);
					if(!entry.errortext)
						bookstr[counter] := entry;
					else
						bookstr[counter] := "";
					endif
					counter := counter + 1;
				endfor
			endfor
			CreateBook(book_data,bookitem,title,author,bookstr);
		endif
		bookstr := {};
	endforeach
	UnloadConfigFile("books");


	SendSysMessage(who, "Finished!", color := 66);
endprogram

function BookExists(df, bookid)
  return(df.FindElement(bookid) != error);
endfunction

function CreateBook(df, bookid, title, author, contents)
  var elem := df.CreateElement(bookid);
  elem.SetProp("author", author);
  elem.SetProp("title", title);
  elem.SetProp("contents", contents);
endfunction