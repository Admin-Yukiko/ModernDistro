use os;
use uo;
use util;
use cliloc;

include "include/client";
include ":magery:spells";
include ":magery:fields";

program stonewall( parms )
  var caster := parms[1];
  var info := parms[2];
  
  var cast_on := MS_TargetCoordinates(caster, info.targ, "Select a target.");
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        SendSysMessageCL(caster, 1042023, color := 33); // Cancelled.
        return 0;
    endif

	MS_PlaySpellSFX(info.spell_id, cast_on);

	var objtype := 0x80;
	var direction := GetDirectionByFacing(caster);
	case ( direction )
		FIELD_SHAPE_HORIZONTAL: objtype := "WallofStoneEW"; break;
		FIELD_SHAPE_VERTICAL: objtype := "WallofStoneNS"; break;
	endcase

	var size := GetConfigInt(info.spell_config, "AreaSize");
	var coordinates := GetCoordinatesForField(cast_on.x, cast_on.y, direction, CInt(size/2));

	foreach coord in ( coordinates )
		var z := cast_on.z;
		if ( z < GetStandingHeight(coord.x, coord.y, cast_on.z, caster.realm) )
			z := GetStandingHeight(coord.x, coord.y, cast_on.z, caster.realm);
		endif

		var mobiles := ListMobilesNearLocationEx(coord.x, coord.y, z, 0, LISTEX_FLAG_NORMAL+LISTEX_FLAG_HIDDEN, caster.realm);
		if (  mobiles.Size() > 0 )
			continue; // Dont create walls on top of mobiles.
		elseif ( !CheckLosAt(caster, coord.x, coord.y, z ) )
			continue; // Only create a field piece if the caster has line of sight.
		endif

		var item := CreateItemAtLocation(coord.x, coord.y, z, objtype, 1, caster.realm);
		if ( item.errortext )
			SendSysMessage(caster, "Error - "+item.errortext);
			continue;
		endif

		SetObjProperty(item, "SummonedField", caster.serial);
		item.SetOwner(caster);
		item.SetDuration(10);

		SleepMS(2);
	endforeach

	return 1;
endprogram