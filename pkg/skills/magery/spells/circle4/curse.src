use os;
use uo;
use util;

include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":magery:spells";
include "include/client";
include "include/sounds";

program cast_curse( parms )
    var caster := parms[1];
    var info := parms[2];
    var cast_on;
    cast_on := MS_Target(caster, info.targ, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HARMFUL);
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        SendSysMessage (caster, "Cancelled.", color := 33);
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif

	// Note: Skill gain is a little too easy
	var resist_skill := AP_GetSkill(caster, RESISTING_SPELLS);
	Print("diff b:"+(15 * (resist_skill / 100.0)));
	var diff := info.difficulty + (15 * (resist_skill / 100.0));
	var adv_diff_bonus := info.difficulty + CInt(((RandomInt(150) + 1.0) - (15 * (resist_skill / 100.0) * 10)) / 10.0);
	if ( adv_diff_bonus < 0 )
			adv_diff_bonus := 0;
	endif
	var adv_diff := resist_skill + adv_diff_bonus;
	Print("diff:"+diff+" adv_diff:"+adv_diff);
// Not sure what tekproxy was thinking with the following but he commented it out so I am leaving it in.
/*
	for i := 1 to 1000
		diff := info.difficulty + (15 * (resist_skill / 100.0));
		adv_diff_bonus := info.difficulty + CInt(((RandomInt(150) + 1.0) - (15 * (resist_skill / 100.0) * 10)) / 10.0);
		if ( adv_diff_bonus < 0 )
				adv_diff_bonus := 0;
		endif
		adv_diff := resist_skill + adv_diff_bonus;
		SkillCheck(caster, RESISTING_SPELLS, diff, adv_diff);
		SleepMS(2);
	endfor
*/
	MS_PlaySpellSFX(info.spell_id, cast_on);
	MS_PlaySpellGFX(info.spell_id, cast_on, caster);

	// Duration: 144% Magery, up to 144 seconds
	var duration := CInt(AP_GetSkill(caster, MAGERY) * 1.44);
	if ( duration > 144 )
			duration := 144;
	endif

	// Decrease % = (Caster Magery / 10) + 1) - (Target Resist / 15)
	// Note: OSI says resist scales down potency but doesn't explain HOW
	var percent := CDbl((AP_GetSkill(caster, MAGERY) / 10) + 1) - (AP_GetSkill(cast_on, RESISTING_SPELLS) / 15);
	var dex_points := CInt(AP_GetStat(cast_on, DEXTERITY) * (percent / 100));
	var int_points := CInt(AP_GetStat(cast_on, INTELLIGENCE) * (percent / 100));
	var str_points := CInt(AP_GetStat(cast_on, STRENGTH) * (percent / 100));

	TS_StartTimer(cast_on, "Clumsy", duration, dex_points, caster);
	TS_StartTimer(cast_on, "FeebleMind", duration, int_points, caster);
	TS_StartTimer(cast_on, "Weaken", duration, str_points, caster);

	return 1;
endprogram
