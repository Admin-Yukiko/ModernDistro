use uo;
use os;


include ":attributes:attributes";
include ":timedScripts:timedScripts";
include ":magery:spells";
include ":damage:damage";

program cast_archprot( parms )
    var caster := parms[1];
    var info := parms[2];
	// Get all targets in area that are in party.
	var area_size := GetConfigInt(info.spell_config, "AreaSize");
	var party_members := caster.party.members;
	var includes := {};
	if ( party_members == error )
			includes := array{caster.serial};
	else
		foreach member in party_members
			includes.Append(member.serial);
		endforeach
	endif

	var friendlies := MS_GetFriendlies(caster, area_size);
	if ( friendlies != error )
			includes += friendlies;
	endif
	
	var targs := MS_GetValidTargets(caster, area_size, 1, "", includes);
	foreach vtarg in targs
		if ( !GetObjProperty(vtarg, "Protection") )
			ApplyArchProtection(vtarg);
		else
			RemoveArchProtection(vtarg);
		endif

		MS_PlaySpellGFX(info.spell_id, vtarg, caster);
	endforeach
	
	return 1;
endprogram

function ApplyArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, -35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, -35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(caster, "FasterCastSpeed", -2);
	
	SetObjProperty(mobile, "Protection", 1);
endfunction

function RemoveArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, 35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, 35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(caster, "FasterCastSpeed", 2);
	
	EraseObjProperty(mobile, "Protection");
endfunction