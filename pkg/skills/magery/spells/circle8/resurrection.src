use os;
use uo;
use cliloc;

include ":magery:spells";
include ":death:resurrection";
include "include/client";

program spell_resurrect( parms )
    var caster := parms[1];
    var info := parms[2];
    var cast_on;
    cast_on := MS_Target(caster, info.targ, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HELPFUL);
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        SendSysMessageCL(caster, 1042023, color := 33); // Cancelled.
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif

	// Do some checks
	if ( caster.serial == cast_on.serial )
		SendSysMessage(caster, 501039, color := 33); // Thou cannot resurrect thyself.
		return 0;
	elseif ( !cast_on.dead )
		SendSysMessage(caster, 501041, color := 33); // Target is not dead.
		return 0;
	elseif ( caster.dead )
		SendSysMessage(caster, 501040, color := 33); // The resurrecter must be alive.
		return 0;
	elseif ( Distance(caster, cast_on) > 1 )
		SendSysMessage(caster, 501043, color := 33); // Target is not close enough.
		return 0;
	elseif ( cast_on.hidden )
		SendSysMessage(caster, 500237, color := 33); // Target cannot be seen.
		return 0;
	elseif ( !cast_on.IsA(POLCLASS_MOBILE) || cast_on.IsA(POLCLASS_NPC) )
		SendSysMessage(caster, 501044, color := 33); // Target is not a being.
		return 0;
	endif

	var settings_elem := MS_GetSettingsCfgElem("Settings");
	
	// Ask targ if they want to res
	if ( CInt(settings_elem.AskToRes) )
		if ( !ResurrectionGump(cast_on) )
			return 0;
		else
			MS_PlaySpellSFX(info.spell_id, cast_on);
			MS_PlaySpellGFX(info.spell_id, cast_on, caster);
		endif
	endif
	
	// Make the caster criminal for ressing a criminal
	if ( Resurrection(cast_on) )
		if ( cast_on.criminal )
			caster.SetCriminal(1);
		endif
	endif

	return 1;
endprogram
