use uo;
use basic;
use cfgfile;
use util;
use os;
include "include/client";
include ":attributes:attributes";
include "include/objtype";
include ":virtue:noto";
include ":timedScripts:timedScripts";

var poison_config_file := ReadConfigFile( "poisoning");
    if(!poison_config_file)
    	SysLog("Error: :poisoning:poisonSkill.src ---> poisoning.cfg file not found.");
    	return 0;
    endif;
var alchemy_itemdesc_file := ReadConfigFile(":alchemy:itemdesc");
    if(!alchemy_itemdesc_file)
    	SysLog("Error: :poisoning:poisonSkill.src ---> :alchemy:itemdesc.cfg file not found.");
    	return 0;
    endif;
program do_poisoning( who )
    var the_item;
    var the_poison;
    var skill;
//    var elem;
    var stren;
    var point;
    SendSysMessage( who, "Select a poison potion." );
    the_poison := Target(who, "");
    if (!the_poison)
		SendSysMessage(who, "Targetting cancelled.");
		return 0;
    endif
    if (! Accessible(who, the_poison))
		SendSysMessage(who, "You can't reach that!");
		return 0;
    endif
    if (the_poison.graphic != UOBJ_POISON_POTION)
		SendSysMessage(who, "You must select a poison potion!");
		return 0;
    endif
    SendSysMessage(who, "Select an object on which to apply this poison.");
    the_item := Target(who, TGTOPT_CHECK_LOS);
    if (!the_item)
		SendSysMessage(who, "Targetting cancelled.");
		return 0;
    endif
    if (! Accessible(who, the_item))
		SendSysMessage(who, "You can't reach that!");
		return 0;
    endif
    var potion_strength :=FindConfigElem(alchemy_itemdesc_file, the_poison.objtype);
	stren :=CInt(GetConfigInt(potion_strength, "strength"));
	if(stren.errortext)
		SysLog("No 'strength' entry for poison potion in alchemy itemdesc file.");
		return;
	endif
    var acfgfile;
    var theitem := FindConfigElem( acfgfile, CInt(the_item.objtype) );
    if (!theitem)
		acfgfile := ReadConfigFile(":combat:itemdesc");
		theitem := acfgfile[the_item.objtype];
	    if (theitem)
			if ((theitem.attribute == "Swords") || (theitem.attribute == "Fencing"))
				if (stren == 0)
					stren := 1;
				endif
				case( stren )
				1:	skill := 10;
					point := 100;
				2:	skill := 30;
					point := 130;
				3:	skill := 55;
					point := 200;
				4:	skill := 88;
					point := 290;
				endcase
	// Didn't mess with the skill gains here until we see how it pans out 08-05-2011
				if (SkillCheck( who, POISONING, skill, point/10) + 20)
					SetObjProperty(the_item, "poison_level", stren*2);
					SetObjProperty(the_item, "d", 25 - (stren));
					var hitscripts := GetObjProperty(the_item, "OnHit");
					var previouspoison := GetObjProperty(the_item, "phit");
					PlaySoundEffect(who, 0x248);
					SetObjProperty(the_item, "PoisonStrength", stren);

					SendSysMessage(who, "You have successfully applied the poison.");

					// Changing from a separate poison hit script to
					// inclusion of poison hit in mainHitScript.
					// The commented out lines are left in here for
					// future reference in the event we, or someone else,
					// wants to use a separate poison hit script.
					/* if (!hitscripts)
						hitscripts := {};
						hitscripts[1] := ":combat:poisonHit";
					else
					  hitscripts.append(":combat:poisonHit");
					endif

					if (previouspoison != 1)
						SetObjProperty(the_item, "OnHit", hitscripts);
					endif 
					SetObjProperty(the_item, "phit", 1); */

					// Adjust the following virtues negatively for poisoning a weapon.
					case(stren)
						1:	VS_AdjustVirtue(who, "honor", -1, prob := 35);
							VS_AdjustVirtue(who, "compassion", -1, 35);
						2:	VS_AdjustVirtue(who, "honor", -1, 50);
							VS_AdjustVirtue(who, "compassion", -1, 50);
						3:	VS_AdjustVirtue(who, "honor", -1, 65);
							VS_AdjustVirtue(who, "compassion", -1, 65);
						4:	VS_AdjustVirtue(who, "honor", -1, 80);
							VS_AdjustVirtue(who, "compassion", -1, 80);
					endcase
				else
					if (RandomInt(100) > GetAttribute(who, POISONING))
						SendSysMessage(who, "You fail, and poison yourself!");
						SetObjProperty(who, "poison_level", stren);
						start_script(":spells:poisondamage", who);
					else
						SendSysMessage(who, "You fail to apply the poison properly.");
					endif
				endif
				SubtractAmount(the_poison,1);
				CreateItemInBackpack(who, UOBJ_EMPTY_BOTTLE, 1);
				return 1;
			elseif((the_item.objtype == 0xf3f) || (the_item.objtype == 0x1bfb)) // arrow and crossbow bolt
				SubtractAmount(the_poison,1);
				if(!ReserveItem(the_item))
					SendSysMessage(who,"cancelled");
					return 0;
				endif
				if(the_item.amount < 10)
					SendSysMessage(who,"Those must be poisoned in groups of 10.");
					return;
				endif
	//		if (SkillCheck( who, POISONING, -1, 100))
				if (SkillCheck( who, POISONING, -1, 10))
					var obj := the_item.objtype;
					if(!SubtractAmount(the_item, 10))
						SendSysMessage(who,"Those must be poisoned in groups of 10.");
						return 0;
					endif
					var objtype;
					// Convert arrows and crossbow bolts to the poisoned versions.
					case(obj)
						0xf3f:   objtype := 0x1999a; // arrow
						0x1bfb:  objtype := 0x1999b; // crossbow bolt
					endcase
					CreateItemInBackpack( who, objtype, 10 );
					PlaySoundEffect(who, 0x248);
					SendSysMessage(who, "You poison some arrows and put them in your backpack");
					// Adjust the following virtues negatively for poisoning a weapon.
					// A harsher virtue adjustment because ten arrows were done at once.
					case(stren)
						1:	VS_AdjustVirtue(who, "honor", -3, prob := 35);
							VS_AdjustVirtue(who, "compassion", -3, 35);
						2:	VS_AdjustVirtue(who, "honor", -3, 50);
							VS_AdjustVirtue(who, "compassion", -3, 50);
						3:	VS_AdjustVirtue(who, "honor", -3, 65);
							VS_AdjustVirtue(who, "compassion", -3, 65);
						4:	VS_AdjustVirtue(who, "honor", -3, 80);
							VS_AdjustVirtue(who, "compassion", -3, 80);
					endcase

				else
					if (RandomInt(100) > GetAttribute(who, POISONING))
						SendSysMessage(who, "You fail, and poison yourself!");
						SetObjProperty(who, "poison_level", (RandomInt(20) + 10));
						start_script(":spells:poisondamage", who);
					else
						SendSysMessage(who, "You fail to apply the poison properly.");
					endif
				endif
				CreateItemInBackpack(who, UOBJ_EMPTY_BOTTLE, 1);
			else
				SendSysMessage(who, "That cannot be poisoned.");
		    endif
		endif
		if (!theitem)
			if (the_item.usescript["eat"] || the_item.usescript["drink"])
				theitem := the_item;
			else
			if (alchcfg[the_item.objtype])
				theitem := theitem;
			else
				return;
			endif
			endif
		endif
    endif
endprogram


function poisonArrows (arrow)

//    var arrow := CreateItemInBackpack( who, obj, 10 );
    var arrowName := arrow.desc;
    arrow.color := 0x8042;
    arrow.desc := "poisoned " + arrowName;
    SetObjProperty(arrow, "OnHit", {":combat:poisonHit"});

endfunction

