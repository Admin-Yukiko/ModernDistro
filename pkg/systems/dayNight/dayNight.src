// $Id: dayNight.src 1259 2011-11-02 19:01:46Z AustinHeilman $
//
//

use uo;
use os;
use polsys;

include ":daynight:dayNight";
include ":daynight:settings";

program SupportScript(realm_name)
	if ( !realm_name in Realms().keys )
		realm_name := _DEFAULT_REALM;
	endif
	
	var pid := CInt(GetGlobalProperty("#DayNightPid-"+realm_name));
	var process := GetProcess(pid);
	if ( process )
		return error{"errortext":="A day night controller is already running for that realm."};
	endif	
	SetGlobalProperty("#DayNightPid-"+realm_name, GetPid());
	
	Print("Day/Night controller for realm '"+realm_name+"' is running.");
	
	var info_struct := GetStartupInfo(realm_name);

	var last_dark_amt;
	while ( 1 )
		info_struct.curphase := GetPhaseForHour(info_struct);
		case ( info_struct.curphase )
			SUNRISING: 
				DawnTransition(info_struct);
				break;
			SUNSETTING:
				DuskTransition(info_struct);
				break;
		endcase
		
		var wait := GetSleepWait(info_struct);
		
		//Print("DayNight [Cycle="+info_struct.curphase+"] [DarkAmt="+info_struct.darkamt+"] [TickWait="+wait+"]");
		if ( info_struct.darkamt != last_dark_amt )
//			var result := SetRegionLightLevel(info_struct.realm+"-Surface", CInt(info_struct.darkamt));
			var result := SetRegionLightLevel(info_struct.realm, CInt(info_struct.darkamt));
			last_dark_amt := info_struct.darkamt;
			if ( result.errortext )
//				Print("Error adjusting light level for region "+info_struct.realm+"-Surface ->"+result.errortext);
				Print("Error adjusting light level for region "+info_struct.realm + " -> " + result.errortext);
			endif
		endif
				
		SaveDayNightInfo(info_struct);
		
		Wait_For_Event(wait);
	endwhile

	return 1;
endprogram

function GetSleepWait(byref info_struct)
	var settings := info_struct.settings_elem;
	
	if ( info_struct.curphase == SUNSETTING || info_struct.curphase == SUNRISING )
		 return settings.TransitionWait;
	else
		return 10;
	endif
	
	// To-Do Calculate the proper sleep time remaining until the next transition.
endfunction

function DawnTransition(byref info_struct)
	Broadcast("The sun is rising.", 3, 48);
	Print("The sun is rising on realm '"+info_struct.realm+"'");
	
	if ( info_struct.darkamt > info_struct.settings_elem.MaxLight )
		info_struct.darkamt -= 1;
	else
		SetToNextPhase(info_struct);
	endif
	
	return 1;
endfunction

function DuskTransition(byref info_struct)
	Broadcast("The sun is setting.", 3, 14);
	Print("The sun is setting on realm '"+info_struct.realm+"'");
		
	if ( info_struct.darkamt < info_struct.settings_elem.MaxDarkness )
		info_struct.darkamt += 1;
	else
		SetToNextPhase(info_struct);
	endif
	
	return 1;
endfunction

function SetToNextPhase(byref info_struct)
	info_struct.curphase := GetNextPhaseId(info_struct.curphase);
	info_struct.last_tick := ReadGameClock();
	
	var game_hour := GetGameHour();
	game_hour := game_hour;
	
	return 1;
endfunction

function GetNextPhaseId(phase_id)
	case ( phase_id )
		SUNSETTING: return DARK;
		DARK: return SUNRISING;
		SUNRISING: return DAY;
		DAY: return SUNSETTING;
		default: return DAY;
	endcase
endfunction

function GetPhaseForHour(byref info_struct)
	var hour := GetGameHour();
	if ( hour >= info_struct.settings_elem.DayEnd )
		if ( info_struct.curphase != DARK )
			return SUNSETTING;
		else
			return DARK;
		endif
	elseif ( hour >= info_struct.settings_elem.DayStart )
		if ( info_struct.curphase != DAY )
			return SUNRISING;
		else
			return DAY;
		endif
	endif
endfunction

function GetStartupInfo(realm_name)
	var data_elem := DAYNIGHT_GetDataFile(realm_name);
	
	var info_struct := struct;
	info_struct.+data_elem 		:= data_elem;
	info_struct.+settings_elem	:= DAYNIGHT_GetSettingsCfgElem("Settings");
	info_struct.+realm		:= realm_name;
	info_struct.+darkamt		:= CInt(data_elem.GetProp("DarkAmt"));
	info_struct.+curphase		:= CInt(data_elem.GetProp("CurPhase"));
	
	info_struct.+last_tick		:= 0;
	info_struct.+next_tick		:= 0;
		
	return info_struct;
endfunction

function SaveDaynightInfo(byref info_struct)
	info_struct.data_elem.SetProp("CurPhase", CInt(info_struct.curphase));
	info_struct.data_elem.SetProp("DarkAmt", CInt(info_struct.darkamt));
		
	return 1;
endfunction